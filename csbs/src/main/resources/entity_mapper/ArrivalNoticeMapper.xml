<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cloud.app.commodity.dao.ArrivalNoticeDAO" >
 	
    <resultMap id="resultMap" type="cloud.app.commodity.model.ArrivalNotice">
        <result column="id" property="id" jdbcType="VARCHAR"  />
        <result column="product_name" property="product_name" jdbcType="VARCHAR"  />
        <result column="member" property="member" jdbcType="VARCHAR"  />
        <result column="phone" property="phone" jdbcType="VARCHAR"  />
        <result column="email" property="email" jdbcType="VARCHAR"  />
        <result column="send" property="send" jdbcType="VARCHAR"  />      
        <result column="isMarketable" property="isMarketable" jdbcType="VARCHAR"  />
        <result column="isOutOfStock" property="isOutOfStock" jdbcType="VARCHAR"  />
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP"  />      
        <result column="update_time" property="update_time" jdbcType="TIMESTAMP"  />       
    </resultMap>
    
    <insert id="save" parameterType="cloud.app.commodity.model.ArrivalNotice"> 
		insert into t_arrival_notice
		( 
			id,product_name,member,phone,email, send,isMarketable,create_time,update_time,isOutOfStock
		) 
		value
		( 
			#{id},#{product_name},#{member},#{phone},#{email},#{send},#{isMarketable},#{create_time},#{update_time},#{isOutOfStock}
		) 
	</insert>
	
	<update id="update" parameterType="cloud.app.commodity.model.ArrivalNotice">
        UPDATE t_arrival_notice
        <set>
         update_time = SYSDATE(),
        	<if test="null != product_name">
				product_name = #{product_name},
			</if>
			<if test="null != member">
				member = #{member},
			</if>
			<if test="null != phone">
				phone = #{phone},
			</if>
			<if test="null != isMarketable">
				isMarketable = #{isMarketable},
			</if>
			<if test="null != send">
				send = #{send},
			</if>		
			<if test="null != isOutOfStock">
				isOutOfStock = #{isOutOfStock},
			</if>			
        </set>
        WHERE ID = #{id}
    </update>
    
    <delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM t_arrival_notice WHERE id = #{id}
	</delete>
	
    <select id="getList" parameterType="cloud.app.commodity.model.ArrivalNotice" resultMap="resultMap" >
        SELECT * FROM t_arrival_notice  WHERE 1=1 
		<if test="null != product_name and product_name != ''">
			AND product_name = #{product_name}
		</if>
		<if test="null != member and member != ''">
			AND member like #{member}
		</if>
		<if test="null != phone and phone != ''">
			AND phone = #{phone}
		</if>	
		<if test="null != isMarketable and isMarketable != ''">
			AND isMarketable = #{isMarketable}
		</if>	
		<if test="null != send and send != ''">
			AND send = #{send}
		</if>
		<if test="null != isOutOfStock and isOutOfStock != ''">
			AND isOutOfStock = #{isOutOfStock}
		</if>		
		limit #{pageIndex},#{pageSize}
    </select>
    
    
     <select id="count" parameterType="cloud.app.commodity.model.ArrivalNotice" resultType="int" >
       SELECT count(1) FROM t_arrival_notice  WHERE 1=1 
	<if test="null != product_name and product_name != ''">
			AND product_name = #{product_name}
		</if>
		<if test="null != member and member != ''">
			AND member like #{member}
		</if>
		<if test="null != phone and phone != ''">
			AND phone = #{phone}
		</if>	
		<if test="null != isMarketable and isMarketable != ''">
			AND isMarketable = #{isMarketable}
		</if>	
		<if test="null != send and send != ''">
			AND send = #{send}
		</if>
		<if test="null != isOutOfStock and isOutOfStock != ''">
			AND isOutOfStock = #{isOutOfStock}
		</if>		
    </select>
    
 <select id="getObjById" parameterType="java.lang.String" resultMap="resultMap">
        SELECT * FROM t_arrival_notice  WHERE id = #{id}
 </select>
    

  
	  
	 
</mapper>