<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:jee="http://www.springframework.org/schema/jee" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		                   http://www.springframework.org/schema/tx 
		                   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		                   http://www.springframework.org/schema/jee 
		                   http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
		                   http://www.springframework.org/schema/aop 
		                   http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		                   http://www.springframework.org/schema/task
		                   http://www.springframework.org/schema/task/spring-task-4.0.xsd
		                   http://www.springframework.org/schema/context 
		                   http://www.springframework.org/schema/context/spring-context-4.0.xsd"
		                   
		  default-lazy-init="false">

<bean id="quartzJob" class="cloud.app.quartz.ProceduresQuartzJob" />  
<bean id="updateTerminalStautsJob" class="cloud.app.quartz.UpdateTerminalStatusQuartzJob" />  



<bean id="jobDetail"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	 <property name="targetObject" ref="quartzJob" />
	<property name="targetMethod" value="toJob" />  
	<property name="concurrent" value="false" /><!-- 作业不并发调度 -->  
</bean>


<bean id="updateTerminalStatusDetail"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	 <property name="targetObject" ref="updateTerminalStautsJob" />
	<property name="targetMethod" value="execute" />  
	<property name="concurrent" value="false" /><!-- 作业不并发调度 -->  
</bean>


     <!-- 另一种触发器是CornTrigger -->
   <bean id="cornTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
     <property name="jobDetail" ref="jobDetail"/>     
     <property name="cronExpression" value="0 0 2 * * ?"/>
     <!-- 测试用10秒一次 -->
<!--       <property name="cronExpression" value="0/10 * * * * ?"/> -->
  </bean> 
  
  
     <!-- 另一种触发器是CornTrigger -->
   <bean id="updateTerminalStatusCornTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
     <property name="jobDetail" ref="updateTerminalStatusDetail"/>
     <!--  正式的时候才放开
     <property name="cronExpression" value="0/30 * * * * ?"/>  
      -->
      
     <property name="cronExpression" value="0 0 2 * * ?"/>
     
  </bean> 
  
  
  <!-- 定义核心调度器 -->
  <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
    <list>
	    <ref bean="cornTrigger"/>
	    <ref bean="updateTerminalStatusCornTrigger"/>
    </list>
    </property>
  </bean>  
		
</beans>