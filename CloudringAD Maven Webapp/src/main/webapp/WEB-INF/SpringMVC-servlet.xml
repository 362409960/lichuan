<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.0.xsd  
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util.xsd  
	http://www.springframework.org/schema/mvc   
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd" >
 
	<mvc:annotation-driven>
	    <mvc:message-converters>
	        <ref bean="stringHttpMessageConverter" />  
            <ref bean="fastJsonHttpMessageConverter" />  
            <!-- 
            <ref bean="marshallingHttpMessageConverter" />
	        -->
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
    <bean id="stringHttpMessageConverter"  
        class="org.springframework.http.converter.StringHttpMessageConverter">  
        <constructor-arg value="UTF-8" index="0"></constructor-arg><!--避免出现乱码 -->  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/plain;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <bean id="fastJsonHttpMessageConverter"  
        class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>application/json;charset=UTF-8</value>  
                <value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->  
            </list>  
        </property>  
        <property name="features">  
            <util:list>
                <value>QuoteFieldNames</value>  
                <value>WriteDateUseDateFormat</value>  
            </util:list>  
        </property>  
    </bean>  
      
    <!-- 暂时不用
    <bean id="marshallingHttpMessageConverter"  
        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">  
        <property name="marshaller" ref="castorMarshaller" />  
        <property name="unmarshaller" ref="castorMarshaller" />  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/xml;charset=UTF-8</value>  
                <value>application/xml;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    -->
    
    <!-- 返回类型定义 -->  
    <util:list id="messageConverters">  
        <ref bean="stringHttpMessageConverter" />  
        <ref bean="fastJsonHttpMessageConverter" />  
        <!-- 
        <ref bean="marshallingHttpMessageConverter" />  
        -->
    </util:list>  
    
	
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" /> 

	<!-- 拦截器配置 -->
	<mvc:interceptors>
	    <mvc:interceptor>
	        <mvc:mapping path="/*/**"/>
	        <bean class="cloud.app.common.SessionTimeoutInterceptor">
	            <property name="allowUrls">
	                <list>
		              <!-- 如果请求中包含以下路径，则不进行拦截 -->
		              <value>/bt</value>
		              <value>/mqtt</value>
		              <value>/loginInit.do</value>
		              <value>/ck/upload.do</value>
		              <value>/sys</value>
		              <value>/safecode</value>
		              <value>/menu</value>
		              <value>/login.do</value>
		              <value>/reLogin.do</value>
		              <value>/user/login.do</value>
		              <value>/ckeditor</value>
		              <value>/common</value>  
		              <value>/css</value>
		              <value>/js/</value>
		              <value>/fonts</value>  
		              <value>/images</value>
		              <value>/left.jsp</value>
		              <value>/main.jsp</value>
		              <value>/right_top.jsp</value>
		              <value>/right.jsp</value>
		              <value>/top.jsp</value>
		              <value>/table.html</value>
		              <value>/index.jsp</value>
	                </list>
	            </property>
	        </bean>
	    </mvc:interceptor>
	  
	</mvc:interceptors>
	
	
    <!-- 扫描所有的controller 但是不扫描service-->     
	 <context:component-scan base-package="cloud.app.*">     
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>     
	</context:component-scan>     
		
	
     <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>  
       
     <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >  
         <property name="prefix" value="/"></property>  
         <property name="suffix" value=".jsp"></property>  
     </bean>
	
     <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">     
         <property name="exceptionMappings">     
             <props>
                 <prop key="cloud.app.exception.SessionTimeoutException">/init</prop> 
                 <prop key="java.lang.Exception">/error</prop>     
                 <prop key="java.lang.Throwable">/blank</prop>     
             </props>     
         </property>     
         <property name="statusCodes">     
             <props>     
                 <prop key="errors/error">500</prop>     
                 <prop key="errors/404">404</prop>     
             </props>     
         </property>     
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->     
         <property name="warnLogCategory" value="WARN"></property>     
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->     
         <property name="defaultErrorView" value="errors/error"></property>     
         <!-- 默认HTTP状态码 -->     
         <property name="defaultStatusCode" value="500"></property>     
     </bean>     
     
     
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
		class="cloud.app.common.MultipartListenerResolver">  
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />  
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />  
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />  
	</bean> 

	<mvc:interceptors>  
	    <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 --> 
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
	</mvc:interceptors> 
	
	<!-- 系统配置拦截器 -->
    <mvc:interceptors>
        <!-- 切换语言拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/*"/>
            <ref bean="localeChangeInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	    <!-- 国际化信息所在的文件名 -->                     
	    <property name="basename" value="languages/messages" />   
	    <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
	    <property name="useCodeAsDefaultMessage" value="true" />           
	</bean>


	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="download,upload"/>
    </bean>
</beans>