<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cloud.shop.goods.dao.ShippingAddressDAO" > 
 
    <resultMap id="resultMap" type="cloud.shop.goods.entity.ShippingAddress">
        <result column="ID" property="id" jdbcType="VARCHAR"  />
        <result column="customer_id" property="customer_id" jdbcType="VARCHAR"  />
        <result column="country_id" property="country_id" jdbcType="VARCHAR"  />
        <result column="province_id" property="province_id" jdbcType="VARCHAR"  />
        <result column="city_id" property="city_id" jdbcType="VARCHAR"  />
        <result column="district_id" property="district_id" jdbcType="VARCHAR"  />
        <result column="address" property="address" jdbcType="VARCHAR"  />
        <result column="contacts" property="contacts" jdbcType="VARCHAR"  />
        <result column="mobile" property="mobile" jdbcType="VARCHAR"  />
        <result column="status" property="status" jdbcType="VARCHAR"  />
        <result column="zipcode" property="zipcode" jdbcType="VARCHAR"  />
        <result column="tel" property="tel" jdbcType="VARCHAR"  />
        <result column="isdefault" property="isdefault" jdbcType="VARCHAR"  />        
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP"  />
    </resultMap>
    
    <insert id="insertShippingAddress" parameterType="cloud.shop.goods.entity.ShippingAddress"> 
		insert into t_shipping_address
		( 
			id,customer_id,country_id,province_id,contacts,mobile,status,zipcode,tel,isdefault,create_time,city_id,district_id,address
		)
		value
		( 
			#{id},#{customer_id},#{country_id},#{province_id},#{contacts},#{mobile},#{status},#{zipcode},#{tel},#{isdefault},#{create_time},#{city_id},#{district_id},#{address}
		) 
	</insert>
  
    <select id="getShippingAddressList" parameterType="cloud.shop.goods.entity.ShippingAddress" resultMap="resultMap" >
        SELECT
			ts.id,
			ts.customer_id,
			ts.country_id,
			tr1.name province_id,
			ts.contacts,
			ts.mobile,
			ts.STATUS,
			ts.zipcode,
			ts.tel,
			ts.isdefault,
			ts.create_time,
			tr2.name city_id,
			tr3.name district_id,
			ts.address
		FROM
			t_shipping_address ts
		LEFT JOIN t_region tr1 ON tr1.id = ts.province_id
		LEFT JOIN t_region tr2 on tr2.id=ts.city_id
		LEFT JOIN t_region tr3 on tr3.id=ts.district_id
		where 1=1
		<if test="null != id">
			AND ts.id = #{id}
		</if>
		and ts.customer_id=#{customer_id}
    </select> 
    
    <select id="getShippingAddressIdList" parameterType="cloud.shop.goods.entity.ShippingAddress" resultMap="resultMap" >
       SELECT * FROM t_shipping_address  WHERE 1=1
		<if test="null != contacts">
			AND contacts = #{contacts}
		</if>
		AND id = #{id}
    </select>
    
    <update id="updateShippingAddress" parameterType="cloud.shop.goods.entity.ShippingAddress">
        UPDATE t_shipping_address
        <set>
            <if test="null != province_id">
			    province_id = #{province_id},
		    </if>
            <if test="null != country_id">
			    country_id = #{country_id},
		    </if>
            <if test="null != city_id">
			    city_id = #{city_id},
		    </if>
		    <if test="null != mobile">
			    mobile = #{mobile},
		    </if>
		    <if test="null != district_id">
			    district_id = #{district_id},
		    </if>
		    <if test="null != address">
			    address = #{address},
		    </if>
		    <if test="null != contacts">
			    contacts = #{contacts},
		    </if>
		     <if test="null != zipcode">
			    zipcode = #{zipcode},
		    </if>
        </set>
        WHERE ID = #{id}
    </update>
    
   <delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM t_shipping_address WHERE id = #{id}
	</delete>	
	
	<select id="getShoppingAddressByIdList" parameterType="cloud.shop.goods.entity.ShippingAddress" resultMap="resultMap" >
        SELECT
			ts.id,
			ts.customer_id,
			ts.country_id,
			tr1.name province_id,
			ts.contacts,
			ts.mobile,
			ts.STATUS,
			ts.zipcode,
			ts.tel,
			ts.isdefault,
			ts.create_time,
			tr2.name city_id,
			tr3.name district_id,
			ts.address
		FROM
			t_shipping_address ts
		LEFT JOIN t_region tr1 ON tr1.id = ts.province_id
		LEFT JOIN t_region tr2 on tr2.id=ts.city_id
		LEFT JOIN t_region tr3 on tr3.id=ts.district_id
		where 1=1		
		and ts.id=#{id}
    </select> 
    
   
</mapper>